"use strict";(self.webpackChunk_1_lesson=self.webpackChunk_1_lesson||[]).push([[194],{"./src/stories/AppWithRedux.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppWithReduxStory:()=>AppWithReduxStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>AppWithRedux_stories});var react=__webpack_require__("./node_modules/react/index.js"),AddItemForm=__webpack_require__("./src/AddItemForm.tsx"),AppBar=__webpack_require__("./node_modules/@mui/material/AppBar/AppBar.js"),Toolbar=__webpack_require__("./node_modules/@mui/material/Toolbar/Toolbar.js"),IconButton=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),Menu=__webpack_require__("./node_modules/@mui/icons-material/Menu.js"),Grid2=__webpack_require__("./node_modules/@mui/material/Unstable_Grid2/Grid2.js"),Container=__webpack_require__("./node_modules/@mui/material/Container/Container.js"),Paper=__webpack_require__("./node_modules/@mui/material/Paper/Paper.js"),styled=__webpack_require__("./node_modules/@mui/material/styles/styled.js"),Button=__webpack_require__("./node_modules/@mui/material/Button/Button.js");const MenuButton=(0,styled.Ay)(Button.A)((_ref=>{let{background,theme}=_ref;return{minWidth:"110px",fontWeight:"bold",boxShadow:"0 0 0 2px ".concat(theme.palette.primary.dark,", 4px 4px 0 0 ").concat(theme.palette.primary.dark),borderRadius:"2px",textTransform:"capitalize",margin:"0 10px",padding:"8px 24px",color:theme.palette.primary.contrastText,background:background||theme.palette.primary.light}}));var createTheme=__webpack_require__("./node_modules/@mui/material/styles/createTheme.js"),ThemeProvider=__webpack_require__("./node_modules/@mui/material/styles/ThemeProvider.js"),Switch=__webpack_require__("./node_modules/@mui/material/Switch/Switch.js"),CssBaseline=__webpack_require__("./node_modules/@mui/material/CssBaseline/CssBaseline.js"),v1=__webpack_require__("./node_modules/uuid/dist/esm-browser/v1.js");(0,v1.A)(),(0,v1.A)();let initialTodolistState=[];let initialTaskState={};var react_redux=__webpack_require__("./node_modules/react-redux/dist/react-redux.mjs"),EditableSpan=__webpack_require__("./src/EditableSpan.tsx"),Delete=__webpack_require__("./node_modules/@mui/icons-material/Delete.js"),List=__webpack_require__("./node_modules/@mui/material/List/List.js"),Box=__webpack_require__("./node_modules/@mui/material/Box/Box.js"),Todolist_styles=__webpack_require__("./src/Todolist.styles.ts"),Task=__webpack_require__("./src/Task.tsx"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Todolist=react.memo((_ref=>{let{title,tasks,todoID,removeTask,changeFilter,addTask,changeTaskStatus,filter,removeTodoList,updateTaskTitle,updateTodolistTitle}=_ref,tasksForTodolist=tasks;"active"===filter&&(tasksForTodolist=tasks.filter((task=>!task.isDone))),"completed"===filter&&(tasksForTodolist=tasks.filter((task=>task.isDone)));const tasksList=tasksForTodolist.map((t=>(0,jsx_runtime.jsx)(Task.Y,{task:t,todoID,removeTask,updateTaskTitle,changeTaskStatus},t.id))),changeFilterTasksHandler=(0,react.useCallback)((filter=>{changeFilter(todoID,filter)}),[todoID,changeFilter]),addTaskHandler=(0,react.useCallback)((title=>{addTask(todoID,title)}),[addTask,todoID]),updateTodolistTitleHandler=(0,react.useCallback)((newTitle=>{updateTodolistTitle(todoID,newTitle)}),[todoID,updateTodolistTitle]);return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("h3",{children:[(0,jsx_runtime.jsx)(EditableSpan.l,{oldTitle:title,updateTitle:updateTodolistTitleHandler}),(0,jsx_runtime.jsx)(IconButton.A,{onClick:()=>{removeTodoList(todoID)},children:(0,jsx_runtime.jsx)(Delete.A,{})})]}),(0,jsx_runtime.jsx)(AddItemForm.A,{addItem:addTaskHandler}),0===tasks.length?(0,jsx_runtime.jsx)("p",{children:"No tasks"}):(0,jsx_runtime.jsx)(List.A,{children:tasksList}),(0,jsx_runtime.jsxs)(Box.A,{sx:Todolist_styles.s,children:[(0,jsx_runtime.jsx)(Button.A,{variant:"all"===filter?"outlined":"text",color:"inherit",className:"all"===filter?"active-filter":"",title:"All",onClick:()=>changeFilterTasksHandler("all"),children:"All"}),(0,jsx_runtime.jsx)(Button.A,{className:"active"===filter?"active-filter":"",variant:"active"===filter?"outlined":"text",color:"primary",title:"Active",onClick:()=>changeFilterTasksHandler("active"),children:"Active"}),(0,jsx_runtime.jsx)(Button.A,{className:"completed"===filter?"active-filter":"",variant:"completed"===filter?"outlined":"text",color:"secondary",onClick:()=>changeFilterTasksHandler("completed"),children:"Completed"})]})]})}));function AppWithRedux(){const[themeMode,setThemeMode]=(0,react.useState)("light"),theme=(0,createTheme.A)({palette:{mode:"light"===themeMode?"light":"dark",primary:{main:"#ef6c00"}}});let todolists=(0,react_redux.d4)((state=>state.todolists)),tasks=(0,react_redux.d4)((state=>state.tasks)),dispatch=(0,react_redux.wA)();const changeTaskStatus=(0,react.useCallback)(((todoID,taskId,taskStatus)=>{dispatch(((todoID,taskId,isDone)=>({type:"CHANGE-TASK-STATUS",taskId,isDone,todoID}))(todoID,taskId,taskStatus))}),[dispatch]),removeTask=(0,react.useCallback)(((todoID,taskId)=>{dispatch(((todoID,taskId)=>({type:"REMOVE-TASK",todoID,taskId}))(todoID,taskId))}),[dispatch]),removeTodoList=(0,react.useCallback)((todoID=>{dispatch({type:"REMOVE-TODOLIST",id:todoID})}),[dispatch]),addTask=(0,react.useCallback)(((todoID,title)=>{dispatch(((todoID,title)=>({type:"ADD-TASK",title,todoID}))(todoID,title))}),[dispatch]),changeFilter=(0,react.useCallback)(((todoID,newFilter)=>{dispatch({type:"CHANGE-TODOLIST-FILTER",payload:{id:todoID,filter:newFilter}})}),[dispatch]),addTodoList=(0,react.useCallback)((title=>{dispatch((title=>({type:"ADD-TODOLIST",title,todoID:(0,v1.A)()}))(title))}),[dispatch]),updateTaskTitle=(0,react.useCallback)(((todoID,taskId,newTitle)=>{dispatch(((todoID,taskId,title)=>({type:"CHANGE-TASK-TITLE",taskId,title,todoID}))(todoID,taskId,newTitle))}),[dispatch]),updateTodolistTitle=(0,react.useCallback)(((todoID,newTitle)=>{dispatch({type:"CHANGE-TODOLIST-TITLE",payload:{title:newTitle,id:todoID}})}),[dispatch]);return(0,jsx_runtime.jsxs)(ThemeProvider.A,{theme,children:[(0,jsx_runtime.jsx)(CssBaseline.Ay,{}),(0,jsx_runtime.jsxs)("div",{className:"App",children:[(0,jsx_runtime.jsx)(AppBar.A,{position:"static",sx:{mb:"30px"},children:(0,jsx_runtime.jsxs)(Toolbar.A,{sx:{display:"flex",justifyContent:"space-between"},children:[(0,jsx_runtime.jsx)(IconButton.A,{color:"inherit",children:(0,jsx_runtime.jsx)(Menu.A,{})}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(MenuButton,{children:"Login"}),(0,jsx_runtime.jsx)(MenuButton,{children:"Logout"}),(0,jsx_runtime.jsx)(MenuButton,{background:theme.palette.primary.dark,children:"Faq"}),(0,jsx_runtime.jsx)(Switch.A,{color:"default",onChange:()=>{setThemeMode("light"===themeMode?"dark":"light")}})]})]})}),(0,jsx_runtime.jsxs)(Container.A,{fixed:!0,children:[(0,jsx_runtime.jsx)(Grid2.A,{container:!0,sx:{mb:"30px"},children:(0,jsx_runtime.jsx)(AddItemForm.A,{addItem:addTodoList})}),(0,jsx_runtime.jsx)(Grid2.A,{container:!0,spacing:4,children:todolists.map((el=>(0,jsx_runtime.jsx)(Grid2.A,{children:(0,jsx_runtime.jsx)(Paper.A,{sx:{p:"0 20px 20px 20px"},children:(0,jsx_runtime.jsx)(Todolist,{todoID:el.id,title:el.title,tasks:tasks[el.id],removeTask,changeFilter,addTask,changeTaskStatus,filter:el.filter,removeTodoList,updateTaskTitle,updateTodolistTitle},el.id)})},el.id)))})]})]})]})}Todolist.__docgenInfo={description:"",methods:[],displayName:"Todolist",props:{todoID:{required:!0,tsType:{name:"string"},description:""},title:{required:!0,tsType:{name:"string"},description:""},tasks:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{\r\n  id: string;\r\n  title: string;\r\n  isDone: boolean;\r\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"title",value:{name:"string",required:!0}},{key:"isDone",value:{name:"boolean",required:!0}}]}}],raw:"TaskType[]"},description:""},removeTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, taskId: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"taskId"}],return:{name:"void"}}},description:""},changeFilter:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, filter: FilterValuesType) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"union",raw:'"all" | "active" | "completed"',elements:[{name:"literal",value:'"all"'},{name:"literal",value:'"active"'},{name:"literal",value:'"completed"'}]},name:"filter"}],return:{name:"void"}}},description:""},addTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, title: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"title"}],return:{name:"void"}}},description:""},changeTaskStatus:{required:!0,tsType:{name:"signature",type:"function",raw:"(\n  todoID: string,\n  taskId: string,\n  taskStatus: boolean\n) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"taskId"},{type:{name:"boolean"},name:"taskStatus"}],return:{name:"void"}}},description:""},removeTodoList:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"}],return:{name:"void"}}},description:""},filter:{required:!0,tsType:{name:"string"},description:""},updateTaskTitle:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, taskId: string, newTitle: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"taskId"},{type:{name:"string"},name:"newTitle"}],return:{name:"void"}}},description:""},updateTodolistTitle:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, newTitle: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"newTitle"}],return:{name:"void"}}},description:""}}};const src_AppWithRedux=AppWithRedux;AppWithRedux.__docgenInfo={description:"",methods:[],displayName:"AppWithRedux"};var redux=__webpack_require__("./node_modules/redux/dist/redux.mjs");const rootReducer=(0,redux.HY)({tasks:function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialTaskState,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"REMOVE-TASK":return{...state,[action.todoID]:state[action.todoID].filter((t=>t.id!==action.taskId))};case"ADD-TASK":return{...state,[action.todoID]:[{id:(0,v1.A)(),title:action.title,isDone:!1},...state[action.todoID]]};case"CHANGE-TASK-STATUS":return{...state,[action.todoID]:state[action.todoID].map((t=>t.id===action.taskId?{...t,isDone:action.isDone}:t))};case"CHANGE-TASK-TITLE":return{...state,[action.todoID]:state[action.todoID].map((t=>t.id===action.taskId?{...t,title:action.title}:t))};case"ADD-TODOLIST":return{...state,[action.todoID]:[]};case"REMOVE-TODOLIST":{const stateCopy={...state};return delete stateCopy[action.id],stateCopy}default:return state}},todolists:function(){let state=arguments.length>0&&void 0!==arguments[0]?arguments[0]:initialTodolistState,action=arguments.length>1?arguments[1]:void 0;switch(action.type){case"REMOVE-TODOLIST":return state.filter((tl=>tl.id!==action.id));case"ADD-TODOLIST":{const newTodoList={id:action.todoID,title:action.title,filter:"all"};return[...state,newTodoList]}case"CHANGE-TODOLIST-TITLE":return state.map((tl=>tl.id===action.payload.id?{...tl,title:action.payload.title}:tl));case"CHANGE-TODOLIST-FILTER":return state.map((el=>el.id===action.payload.id?{...el,filter:action.payload.filter}:el));default:return state}}}),store=(0,redux.Yl)(rootReducer);window.store=store;const ReduxStoreProviderDecorator=storyFn=>(0,jsx_runtime.jsx)(react_redux.Kq,{store,children:storyFn()});ReduxStoreProviderDecorator.__docgenInfo={description:"",methods:[],displayName:"ReduxStoreProviderDecorator"};const AppWithRedux_stories={title:"TODOLISTS/AppWithRedux",component:src_AppWithRedux,tags:["autodocs"],decorators:[ReduxStoreProviderDecorator]},AppWithReduxStory={};AppWithReduxStory.parameters={...AppWithReduxStory.parameters,docs:{...AppWithReduxStory.parameters?.docs,source:{originalSource:"{}",...AppWithReduxStory.parameters?.docs?.source}}};const __namedExportsOrder=["AppWithReduxStory"]},"./src/AddItemForm.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),_mui_icons_material_AddBox__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/icons-material/AddBox.js"),_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const AddItemForm=(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)((_ref=>{let{addItem}=_ref;console.log("AddItemForm");const[taskTitle,setTaskTitle]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(""),[error,setError]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),addTaskHandler=()=>{""!==taskTitle.trim()?(addItem(taskTitle.trim()),setTaskTitle("")):setError("Title is required")};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{label:"Enter a title",variant:"outlined",className:error?"error":"",value:taskTitle,size:"small",onChange:event=>{setTaskTitle(event.currentTarget.value)},onKeyUp:event=>{error&&setError(null),"Enter"===event.key&&addTaskHandler()},error:!!error,helperText:error}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_3__.A,{onClick:()=>{addTaskHandler()},color:"primary",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_icons_material_AddBox__WEBPACK_IMPORTED_MODULE_4__.A,{})})]})})),__WEBPACK_DEFAULT_EXPORT__=AddItemForm;AddItemForm.__docgenInfo={description:"",methods:[],displayName:"AddItemForm",props:{addItem:{required:!0,tsType:{name:"signature",type:"function",raw:"(title: string) => void",signature:{arguments:[{type:{name:"string"},name:"title"}],return:{name:"void"}}},description:""}}}},"./src/EditableSpan.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>EditableSpan});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const EditableSpan=react__WEBPACK_IMPORTED_MODULE_0__.memo((_ref=>{let{oldTitle,updateTitle}=_ref;const[edit,setEdit]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[newTitle,setNewTitle]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(oldTitle),editHandler=()=>{setEdit(!edit),edit&&updateTitleHandler()},updateTitleHandler=()=>{updateTitle(newTitle.trim())};return edit?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{variant:"outlined",value:newTitle,size:"small",onChange:event=>{setNewTitle(event.currentTarget.value)},onBlur:editHandler,autoFocus:!0}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{onDoubleClick:editHandler,children:oldTitle})}));EditableSpan.__docgenInfo={description:"",methods:[],displayName:"EditableSpan",props:{oldTitle:{required:!0,tsType:{name:"string"},description:""},updateTitle:{required:!0,tsType:{name:"signature",type:"function",raw:"(newTitle: string) => void",signature:{arguments:[{type:{name:"string"},name:"newTitle"}],return:{name:"void"}}},description:""}}}},"./src/Task.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Y:()=>Task});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_EditableSpan__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/EditableSpan.tsx"),_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__("./node_modules/@mui/material/IconButton/IconButton.js"),_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__("./node_modules/@mui/material/Checkbox/Checkbox.js"),_Todolist_styles__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/Todolist.styles.ts"),_mui_material_ListItem__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@mui/material/ListItem/ListItem.js"),_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__("./node_modules/@mui/icons-material/Delete.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");const Task=react__WEBPACK_IMPORTED_MODULE_0__.memo((_ref=>{let{task,todoID,changeTaskStatus,updateTaskTitle,removeTask}=_ref;const onClickHandler=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((()=>removeTask(todoID,task.id)),[task.id,todoID,removeTask]),updateTaskTitleHandler=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(((taskId,newTitle)=>{updateTaskTitle(todoID,taskId,newTitle)}),[todoID,updateTaskTitle]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)(_mui_material_ListItem__WEBPACK_IMPORTED_MODULE_4__.Ay,{disableGutters:!0,disablePadding:!0,sx:(0,_Todolist_styles__WEBPACK_IMPORTED_MODULE_2__.V)(task.isDone),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxs)("div",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_Checkbox__WEBPACK_IMPORTED_MODULE_5__.A,{checked:task.isDone,onChange:e=>{const newStatusValue=e.currentTarget.checked;changeTaskStatus(todoID,task.id,newStatusValue)}}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_EditableSpan__WEBPACK_IMPORTED_MODULE_1__.l,{oldTitle:task.title,updateTitle:newTitle=>{updateTaskTitleHandler(task.id,newTitle)}})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_6__.A,{onClick:onClickHandler,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_mui_icons_material_Delete__WEBPACK_IMPORTED_MODULE_7__.A,{})})]},task.id)}));Task.__docgenInfo={description:"",methods:[],displayName:"Task",props:{task:{required:!0,tsType:{name:"signature",type:"object",raw:"{\n  id: string;\n  title: string;\n  isDone: boolean;\n}",signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"title",value:{name:"string",required:!0}},{key:"isDone",value:{name:"boolean",required:!0}}]}},description:""},todoID:{required:!0,tsType:{name:"string"},description:""},changeTaskStatus:{required:!0,tsType:{name:"signature",type:"function",raw:"(\n  todoID: string,\n  taskId: string,\n  taskStatus: boolean\n) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"taskId"},{type:{name:"boolean"},name:"taskStatus"}],return:{name:"void"}}},description:""},updateTaskTitle:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, taskId: string, newTitle: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"taskId"},{type:{name:"string"},name:"newTitle"}],return:{name:"void"}}},description:""},removeTask:{required:!0,tsType:{name:"signature",type:"function",raw:"(todoID: string, taskId: string) => void",signature:{arguments:[{type:{name:"string"},name:"todoID"},{type:{name:"string"},name:"taskId"}],return:{name:"void"}}},description:""}}}},"./src/Todolist.styles.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{V:()=>getListItemSx,s:()=>filterButtonsContainerSx});const filterButtonsContainerSx={display:"flex",justifyContent:"space-between"},getListItemSx=isDone=>({p:0,justifyContent:"space-between",opacity:isDone?.5:1})}}]);