"use strict";(self.webpackChunk_1_lesson=self.webpackChunk_1_lesson||[]).push([[811],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var v4=__webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("@storybook/core-events/preview-errors"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./src/stories/EditableSpan.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EditableSpanStory:()=>EditableSpanStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"TODOLISTS/EditableSpan",component:__webpack_require__("./src/EditableSpan.tsx").l,tags:["autodocs"],argTypes:{oldTitle:{description:"Start value empty. Add value push button set string."},updateTitle:{description:"Value EditableSpan changed"}}},EditableSpanStory={args:{updateTitle:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Value EditableSpan changed")}};EditableSpanStory.parameters={...EditableSpanStory.parameters,docs:{...EditableSpanStory.parameters?.docs,source:{originalSource:'{\n  args: {\n    updateTitle: action("Value EditableSpan changed")\n  }\n}',...EditableSpanStory.parameters?.docs?.source}}};const __namedExportsOrder=["EditableSpanStory"]},"./src/EditableSpan.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{l:()=>EditableSpan});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_mui_material__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mui/material/TextField/TextField.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const EditableSpan=react__WEBPACK_IMPORTED_MODULE_0__.memo((_ref=>{let{oldTitle,updateTitle}=_ref;const[edit,setEdit]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[newTitle,setNewTitle]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(oldTitle),editHandler=()=>{setEdit(!edit),edit&&updateTitleHandler()},updateTitleHandler=()=>{updateTitle(newTitle.trim())};return edit?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_mui_material__WEBPACK_IMPORTED_MODULE_2__.A,{variant:"outlined",value:newTitle,size:"small",onChange:event=>{setNewTitle(event.currentTarget.value)},onBlur:editHandler,autoFocus:!0}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("span",{onDoubleClick:editHandler,children:oldTitle})}));EditableSpan.__docgenInfo={description:"",methods:[],displayName:"EditableSpan",props:{oldTitle:{required:!0,tsType:{name:"string"},description:""},updateTitle:{required:!0,tsType:{name:"signature",type:"function",raw:"(newTitle: string) => void",signature:{arguments:[{type:{name:"string"},name:"newTitle"}],return:{name:"void"}}},description:""}}}}}]);